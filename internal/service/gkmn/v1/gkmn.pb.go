// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: gkmn/v1/gkmn.proto

package gkmnv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Monster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BaseHp int32  `protobuf:"varint,3,opt,name=baseHp,proto3" json:"baseHp,omitempty"`
}

func (x *Monster) Reset() {
	*x = Monster{}
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monster) ProtoMessage() {}

func (x *Monster) ProtoReflect() protoreflect.Message {
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monster.ProtoReflect.Descriptor instead.
func (*Monster) Descriptor() ([]byte, []int) {
	return file_gkmn_v1_gkmn_proto_rawDescGZIP(), []int{0}
}

func (x *Monster) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Monster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Monster) GetBaseHp() int32 {
	if x != nil {
		return x.BaseHp
	}
	return 0
}

type BattleMonster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monster *Monster `protobuf:"bytes,1,opt,name=monster,proto3" json:"monster,omitempty"`
	LiveHp  int32    `protobuf:"varint,2,opt,name=liveHp,proto3" json:"liveHp,omitempty"`
	Speed   int32    `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *BattleMonster) Reset() {
	*x = BattleMonster{}
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleMonster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleMonster) ProtoMessage() {}

func (x *BattleMonster) ProtoReflect() protoreflect.Message {
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleMonster.ProtoReflect.Descriptor instead.
func (*BattleMonster) Descriptor() ([]byte, []int) {
	return file_gkmn_v1_gkmn_proto_rawDescGZIP(), []int{1}
}

func (x *BattleMonster) GetMonster() *Monster {
	if x != nil {
		return x.Monster
	}
	return nil
}

func (x *BattleMonster) GetLiveHp() int32 {
	if x != nil {
		return x.LiveHp
	}
	return 0
}

func (x *BattleMonster) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

type NewBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Monsters []*Monster `protobuf:"bytes,1,rep,name=monsters,proto3" json:"monsters,omitempty"`
}

func (x *NewBattleRequest) Reset() {
	*x = NewBattleRequest{}
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBattleRequest) ProtoMessage() {}

func (x *NewBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBattleRequest.ProtoReflect.Descriptor instead.
func (*NewBattleRequest) Descriptor() ([]byte, []int) {
	return file_gkmn_v1_gkmn_proto_rawDescGZIP(), []int{2}
}

func (x *NewBattleRequest) GetMonsters() []*Monster {
	if x != nil {
		return x.Monsters
	}
	return nil
}

type NewBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BattleMonsters []*BattleMonster `protobuf:"bytes,2,rep,name=battleMonsters,proto3" json:"battleMonsters,omitempty"`
}

func (x *NewBattleResponse) Reset() {
	*x = NewBattleResponse{}
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBattleResponse) ProtoMessage() {}

func (x *NewBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gkmn_v1_gkmn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBattleResponse.ProtoReflect.Descriptor instead.
func (*NewBattleResponse) Descriptor() ([]byte, []int) {
	return file_gkmn_v1_gkmn_proto_rawDescGZIP(), []int{3}
}

func (x *NewBattleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NewBattleResponse) GetBattleMonsters() []*BattleMonster {
	if x != nil {
		return x.BattleMonsters
	}
	return nil
}

var File_gkmn_v1_gkmn_proto protoreflect.FileDescriptor

var file_gkmn_v1_gkmn_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x6b, 0x6d, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x6b, 0x6d, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33,
	0x2e, 0x67, 0x6b, 0x6d, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x45, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x48,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x48, 0x70, 0x22,
	0x74, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x35, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x2e, 0x67,
	0x6b, 0x6d, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x48,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x48, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6a, 0x63,
	0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x2e, 0x67, 0x6b, 0x6d, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x6e, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x2e, 0x67, 0x6b, 0x6d,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x32, 0x6c, 0x0a, 0x0b, 0x47, 0x6b, 0x6d, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x12, 0x24, 0x2e, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x2e, 0x67,
	0x6b, 0x6d, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d,
	0x61, 0x6e, 0x36, 0x33, 0x2e, 0x67, 0x6b, 0x6d, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0xcd, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61,
	0x6e, 0x36, 0x33, 0x2e, 0x67, 0x6b, 0x6d, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x47, 0x6b, 0x6d,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x2f,
	0x6e, 0x65, 0x6f, 0x2d, 0x67, 0x6b, 0x6d, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x6b, 0x6d, 0x6e, 0x2f, 0x76,
	0x31, 0x3b, 0x67, 0x6b, 0x6d, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4a, 0x47, 0x58, 0xaa, 0x02,
	0x12, 0x4a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x2e, 0x47, 0x6b, 0x6d, 0x6e,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x4a, 0x63, 0x68, 0x61, 0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33,
	0x5c, 0x47, 0x6b, 0x6d, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x4a, 0x63, 0x68, 0x61, 0x70,
	0x6d, 0x61, 0x6e, 0x36, 0x33, 0x5c, 0x47, 0x6b, 0x6d, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x4a, 0x63, 0x68, 0x61,
	0x70, 0x6d, 0x61, 0x6e, 0x36, 0x33, 0x3a, 0x3a, 0x47, 0x6b, 0x6d, 0x6e, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gkmn_v1_gkmn_proto_rawDescOnce sync.Once
	file_gkmn_v1_gkmn_proto_rawDescData = file_gkmn_v1_gkmn_proto_rawDesc
)

func file_gkmn_v1_gkmn_proto_rawDescGZIP() []byte {
	file_gkmn_v1_gkmn_proto_rawDescOnce.Do(func() {
		file_gkmn_v1_gkmn_proto_rawDescData = protoimpl.X.CompressGZIP(file_gkmn_v1_gkmn_proto_rawDescData)
	})
	return file_gkmn_v1_gkmn_proto_rawDescData
}

var file_gkmn_v1_gkmn_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gkmn_v1_gkmn_proto_goTypes = []any{
	(*Monster)(nil),           // 0: jchapman63.gkmn.v1.Monster
	(*BattleMonster)(nil),     // 1: jchapman63.gkmn.v1.BattleMonster
	(*NewBattleRequest)(nil),  // 2: jchapman63.gkmn.v1.NewBattleRequest
	(*NewBattleResponse)(nil), // 3: jchapman63.gkmn.v1.NewBattleResponse
}
var file_gkmn_v1_gkmn_proto_depIdxs = []int32{
	0, // 0: jchapman63.gkmn.v1.BattleMonster.monster:type_name -> jchapman63.gkmn.v1.Monster
	0, // 1: jchapman63.gkmn.v1.NewBattleRequest.monsters:type_name -> jchapman63.gkmn.v1.Monster
	1, // 2: jchapman63.gkmn.v1.NewBattleResponse.battleMonsters:type_name -> jchapman63.gkmn.v1.BattleMonster
	2, // 3: jchapman63.gkmn.v1.GkmnService.CreateBattle:input_type -> jchapman63.gkmn.v1.NewBattleRequest
	3, // 4: jchapman63.gkmn.v1.GkmnService.CreateBattle:output_type -> jchapman63.gkmn.v1.NewBattleResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gkmn_v1_gkmn_proto_init() }
func file_gkmn_v1_gkmn_proto_init() {
	if File_gkmn_v1_gkmn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gkmn_v1_gkmn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gkmn_v1_gkmn_proto_goTypes,
		DependencyIndexes: file_gkmn_v1_gkmn_proto_depIdxs,
		MessageInfos:      file_gkmn_v1_gkmn_proto_msgTypes,
	}.Build()
	File_gkmn_v1_gkmn_proto = out.File
	file_gkmn_v1_gkmn_proto_rawDesc = nil
	file_gkmn_v1_gkmn_proto_goTypes = nil
	file_gkmn_v1_gkmn_proto_depIdxs = nil
}
